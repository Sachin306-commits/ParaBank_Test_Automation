{"name": "test_accountNumber", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Extra data: line 38 column 1 (char 1010)", "trace": "@pytest.mark.smoke\n    def test_accountNumber():\n        bank_accounts = 99591\n        transaction_amount = 122.00\n        response = CREATE_TRANSACTIONS.create_transactions(bank_accounts,transaction_amount)\n    \n        print(\"Status Code:\", response.status_code)\n        print(\"Response Body:\", response.text)\n    \n        assert response.status_code == 200, f\"Expected 200, got {response.status_code}\"\n    \n        response_json = response.json()\n        with open(\"Schemas/Create_transactions_by_amount_for_account.json\") as f:\n>           schema = json.load(f)\n\nTests\\API_Testing\\GET_TESTING\\test_Create_transactions_by_amount_for_account.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\json\\__init__.py:293: in load\n    return loads(fp.read(),\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x000001DF98FFA870>\ns = '{\\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\\n  \"title\": \"Account Transactions Response\",\\n  \"type\": \"a... transaction\"\\n      }\\n    },\\n    \"required\": [\"id\", \"accountId\", \"type\", \"date\", \"amount\", \"description\"]\\n  }\\n}\\n'\n_w = <built-in method match of re.Pattern object at 0x000001DF98FA2CF0>\n\n    def decode(self, s, _w=WHITESPACE.match):\n        \"\"\"Return the Python representation of ``s`` (a ``str`` instance\n        containing a JSON document).\n    \n        \"\"\"\n        obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n        end = _w(s, end).end()\n        if end != len(s):\n>           raise JSONDecodeError(\"Extra data\", s, end)\nE           json.decoder.JSONDecodeError: Extra data: line 38 column 1 (char 1010)\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\json\\decoder.py:340: JSONDecodeError"}, "attachments": [{"name": "stdout", "source": "9fd9d9f2-e00c-4c31-9f65-afe15e87c29e-attachment.txt", "type": "text/plain"}], "start": 1760928373032, "stop": 1760928374771, "uuid": "3682c34f-bb9c-4d0c-8498-633ad1de4904", "historyId": "9b9e099d7344af2c0e95c53e54b0af43", "testCaseId": "9b9e099d7344af2c0e95c53e54b0af43", "fullName": "Tests.API_Testing.GET_TESTING.test_Create_transactions_by_amount_for_account#test_accountNumber", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Tests.API_Testing.GET_TESTING"}, {"name": "suite", "value": "test_Create_transactions_by_amount_for_account"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "16092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.API_Testing.GET_TESTING.test_Create_transactions_by_amount_for_account"}], "titlePath": ["Tests", "API_Testing", "GET_TESTING", "test_Create_transactions_by_amount_for_account.py"]}