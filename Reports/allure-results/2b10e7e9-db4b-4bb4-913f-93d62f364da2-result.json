{"name": "test_register_user[Sachin121111@]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\n  (Session info: chrome=140.0.7339.208)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7e52ffc95+79861]\n\tGetHandleVerifier [0x0x7ff7e52ffcf0+79952]\n\t(No symbol) [0x0x7ff7e507cada]\n\t(No symbol) [0x0x7ff7e50797e1]\n\t(No symbol) [0x0x7ff7e506a339]\n\t(No symbol) [0x0x7ff7e506c111]\n\t(No symbol) [0x0x7ff7e506a656]\n\t(No symbol) [0x0x7ff7e506a0a7]\n\t(No symbol) [0x0x7ff7e5069d6b]\n\t(No symbol) [0x0x7ff7e50678dc]\n\t(No symbol) [0x0x7ff7e506816c]\n\t(No symbol) [0x0x7ff7e5080baa]\n\t(No symbol) [0x0x7ff7e5125d6e]\n\t(No symbol) [0x0x7ff7e50fcada]\n\t(No symbol) [0x0x7ff7e5124f8b]\n\t(No symbol) [0x0x7ff7e50fc8b3]\n\t(No symbol) [0x0x7ff7e50c5272]\n\t(No symbol) [0x0x7ff7e50c6043]\n\tGetHandleVerifier [0x0x7ff7e55bb9cd+2946349]\n\tGetHandleVerifier [0x0x7ff7e55b5c4a+2922410]\n\tGetHandleVerifier [0x0x7ff7e55d59d7+3052855]\n\tGetHandleVerifier [0x0x7ff7e531aa7e+189918]\n\tGetHandleVerifier [0x0x7ff7e5322a1f+222591]\n\tGetHandleVerifier [0x0x7ff7e5308ab4+116244]\n\tGetHandleVerifier [0x0x7ff7e5308c69+116681]\n\tGetHandleVerifier [0x0x7ff7e52ef048+11176]\n\tBaseThreadInitThunk [0x0x7ffe77bfe8d7+23]\n\tRtlUserThreadStart [0x0x7ffe7972c53c+44]", "trace": "browserInstance = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"69332f8a1d48d14d5188afeb7d406307\")>\ndata = {'Account_number': '12345678', 'Confirm_account_number': '12345678', 'Payee_contact_details': '9887125284', 'Transfer_Account': '100000', ...}\n\n    @pytest.mark.parametrize(\n        \"data\",\n        test_list,   # this comes from test_data[\"data\"]\n        ids=[d[\"user_base_name\"] for d in test_list]\n    )\n    @pytest.mark.smoke\n    @pytest.mark.parametrized\n    def test_register_user(browserInstance,data):\n        driver = browserInstance\n>       driver.get(\"https://parabank.parasoft.com/parabank/index.htm\")\n\nTests\\Positive_Testing\\test_register.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000011D46AC4AD0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_INTERNET_DISCONNECTED\\\\...ff7e52ef048+11176]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffe77bfe8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffe7972c53c+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\nE         (Session info: chrome=140.0.7339.208)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7e52ffc95+79861]\nE       \tGetHandleVerifier [0x0x7ff7e52ffcf0+79952]\nE       \t(No symbol) [0x0x7ff7e507cada]\nE       \t(No symbol) [0x0x7ff7e50797e1]\nE       \t(No symbol) [0x0x7ff7e506a339]\nE       \t(No symbol) [0x0x7ff7e506c111]\nE       \t(No symbol) [0x0x7ff7e506a656]\nE       \t(No symbol) [0x0x7ff7e506a0a7]\nE       \t(No symbol) [0x0x7ff7e5069d6b]\nE       \t(No symbol) [0x0x7ff7e50678dc]\nE       \t(No symbol) [0x0x7ff7e506816c]\nE       \t(No symbol) [0x0x7ff7e5080baa]\nE       \t(No symbol) [0x0x7ff7e5125d6e]\nE       \t(No symbol) [0x0x7ff7e50fcada]\nE       \t(No symbol) [0x0x7ff7e5124f8b]\nE       \t(No symbol) [0x0x7ff7e50fc8b3]\nE       \t(No symbol) [0x0x7ff7e50c5272]\nE       \t(No symbol) [0x0x7ff7e50c6043]\nE       \tGetHandleVerifier [0x0x7ff7e55bb9cd+2946349]\nE       \tGetHandleVerifier [0x0x7ff7e55b5c4a+2922410]\nE       \tGetHandleVerifier [0x0x7ff7e55d59d7+3052855]\nE       \tGetHandleVerifier [0x0x7ff7e531aa7e+189918]\nE       \tGetHandleVerifier [0x0x7ff7e5322a1f+222591]\nE       \tGetHandleVerifier [0x0x7ff7e5308ab4+116244]\nE       \tGetHandleVerifier [0x0x7ff7e5308c69+116681]\nE       \tGetHandleVerifier [0x0x7ff7e52ef048+11176]\nE       \tBaseThreadInitThunk [0x0x7ffe77bfe8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffe7972c53c+44]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "attachments": [{"name": "screenshot_on_failure", "source": "1d346ef2-dbd1-4cab-b982-2e24ddecddaf-attachment.png", "type": "image/png"}, {"name": "log", "source": "f08d9923-a48e-4cce-a466-316b4bd6adc7-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'user_first_name': 'Sachin Kumar', 'user_second_name': 'Tiwari', 'user_address': 'Janta Bazar', 'user_city': 'Chapra', 'user_state': 'Bihar', 'user_zip_code': '841224', 'user_phone_no': '7903809668', 'user_ssn': '123-45-6789', 'user_base_name': 'Sachin121111@', 'user_password': 'Sachin306@', 'user_confirm_password': 'Sachin306@', 'send_money': '10000', 'payee_name': 'Sachin_Tiwari', 'Account_number': '12345678', 'Confirm_account_number': '12345678', 'Transfer_Account': '100000', 'Payee_contact_details': '9887125284', 'contact_email_name': 'st9420907@gmail.com', 'message': 'Hi There i want my money back', 'loan_amount': '1000', 'down_payment': '12', 'high_amount_loan': '1000000', 'phoneNumber': '7903809668', 'accountNumber': '15342'}"}], "start": 1760420521311, "stop": 1760420521513, "uuid": "8bca7875-334b-4b88-b442-cc743e51f07c", "historyId": "7fd21b303140f9ea453a33846318a775", "testCaseId": "40f8d67be23bc6d0ee2936eff6a8985b", "fullName": "Tests.Positive_Testing.test_register#test_register_user", "labels": [{"name": "tag", "value": "parametrized"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Tests.Positive_Testing"}, {"name": "suite", "value": "test_register"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "14464-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.Positive_Testing.test_register"}], "titlePath": ["Tests", "Positive_Testing", "test_register.py"]}